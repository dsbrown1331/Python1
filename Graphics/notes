===========================================
Getting started
========================================
First install pygame (https://www.pygame.org/wiki/GettingStarted).

Scroll down until you find the appropriate instructions for your
Operating System.

Let me know if you have problems. After install you should be able to run
python3 -m pygame.examples.aliens
in a terminal and see a space invaders game popup.


Mac: Might need to install some extra software

ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/
install/master/install)"

brew install sdl sdl_image sdl_mixer sdl_ttf portmidi

Ubuntu 16.04 (https://stackoverflow.com/questions/42707566/how-to-install-pygame-for-python3-5-in-ubuntu16-04)
===================================
===================================

Note: You can copy and paste any of this code if you want.


---------------
starter_code.py

TODO: Go to the website listed in the code and read up on pygame.

Add more shapes of different colors to make a picture.

When you have a picture. Show it to me and then continue below.

------------
moving_circle.py

Google pygame clock.tick() to see what it does.

Play around with x_step and y_step and the argument to clock.tick() to see
what happens.

Try to get the ball to bounce off of the walls.
Hint: You need to check if the ball has gone off of the screen and then
have the ball start moving in the other direction.

If you've spent more than 20 minutes trying to get this to work, then
move on to the next task to see my solution.


-------------
bouncing_circle.py

Run this program and see what happens.

Go through the code and make sure you understand how the ball "bounces" off
of the walls.

What happens if you start the circle at position (50,50)?
What causes this behavior? Try slowing down the simulation and using print()
statements to see what is happening.

Add another circle and start it at a different position and make it bounce
off the walls. Can you use a list and a for loop and a function to avoid copying and pasting
the code that updates the circles.

Now check for collisions between the two circles and have them bounce off
of each other too.


------------
falling_circles.py

copy the code and run it to see what happens.

Read though each line of code and try to understand what is happening

Change values to see what affect they have on the code.

Find all the TODO's in the code and complete them.

--------------
driving_circle.py

copy the code and run it to see what happens.
Try pressing the left arrow key...

Complete the TODO's in the code


----------------
updating_score.py

Look through this code and run it.
It is the same as the starter code for falling_circles.py
except there is a score at the top of the screen.
The score is set up so it is -1 each time a circle hits the bottom.

Read (https://www.programiz.com/python-programming/global-keyword)
to learn about the global key word used in line 30.

-----------------
Now I want you to create your own game. If you're stuck,
here's my idea.

Create a bubble popper game where the person playing
gets to drive a circle around and pop other circles.

Try to combine driving_circle, falling_circles, and
updating_score. Make it so when the circle you are driving
touches another bubble it pops (make it go back to the top of the screen)
and you get +1 points. If you let a bubble fall you get -1 points.
Bubbles get reset to a random position at the top whenever they are popped or
fall to the bottom.

You can check if a bubble should be popped by checking whether
the distance between the center of the driving circle and the bubble circle
is less than or equal to the sum of their radii.

Play with the speeds to get good game play.

Good luck!

-------------------------

Work through the Tutorials (https://www.pygame.org/docs/)
to learn more and use what you learn to create a new game.
